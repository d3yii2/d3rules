<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3rules\models\base;

use d3yii2\d3rules\models\SysModels;
use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;


/**
 * This is the base-model class for table "d3rule_setting_type".
 *
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property integer $dict_class_id
 *
 * @property \d3yii2\d3rules\models\D3ruleRuleSetting[] $d3ruleRuleSettings
 * @property SysModels $dictClass
 * @property string $aliasModel
 */
abstract class D3RuleSettingType extends ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3rule_setting_type';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = [
        ];
        return $behaviors;
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['code', 'name'], 'required'],
            'tinyint Unsigned' => [['id','dict_class_id'],'integer' ,'min' => 0 ,'max' => 255],
            [['code'], 'string', 'max' => 20],
            [['name'], 'string', 'max' => 50],
            [['dict_class_id'], 'exist', 'skipOnError' => true, 'targetClass' => SysModels::className(), 'targetAttribute' => ['dict_class_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3rules', 'ID'),
            'code' => Yii::t('d3rules', 'Code'),
            'name' => Yii::t('d3rules', 'Name'),
            'dict_class_id' => Yii::t('d3rules', 'Dict Class ID'),
        ];
    }

    /**
     * @return ActiveQuery
     */
    public function getD3ruleRuleSettings()
    {
        return $this->hasMany(\d3yii2\d3rules\models\D3ruleRuleSetting::className(), ['type_id' => 'id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getDictClass()
    {
        return $this->hasOne(SysModels::className(), ['id' => 'dict_class_id']);
    }




}
