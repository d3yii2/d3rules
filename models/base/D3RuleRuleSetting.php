<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3rules\models\base;

use Yii;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;


/**
 * This is the base-model class for table "d3rule_rule_setting".
 *
 * @property integer $id
 * @property integer $rule_id
 * @property integer $type_id
 * @property string $value
 *
 * @property \d3yii2\d3rules\models\D3ruleRule $rule
 * @property \d3yii2\d3rules\models\D3ruleSettingType $type
 * @property string $aliasModel
 */
abstract class D3RuleRuleSetting extends ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3rule_rule_setting';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = [
        ];
        return $behaviors;
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['rule_id', 'type_id'], 'required'],
            'tinyint Unsigned' => [['type_id'],'integer' ,'min' => 0 ,'max' => 255],
            'smallint Unsigned' => [['id','rule_id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['value'], 'string', 'max' => 255],
            [['rule_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3rules\models\D3ruleRule::className(), 'targetAttribute' => ['rule_id' => 'id']],
            [['type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3rules\models\D3ruleSettingType::className(), 'targetAttribute' => ['type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3rules', 'ID'),
            'rule_id' => Yii::t('d3rules', 'Rule ID'),
            'type_id' => Yii::t('d3rules', 'Type ID'),
            'value' => Yii::t('d3rules', 'Value'),
        ];
    }

    /**
     * @return ActiveQuery
     */
    public function getRule()
    {
        return $this->hasOne(\d3yii2\d3rules\models\D3ruleRule::className(), ['id' => 'rule_id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getType()
    {
        return $this->hasOne(\d3yii2\d3rules\models\D3ruleSettingType::className(), ['id' => 'type_id']);
    }




}
